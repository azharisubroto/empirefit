{"version":3,"sources":["webpack:///./src/app/shared/services/health-questions.service.ts","webpack:///./src/app/shared/services/member-type.service.ts","webpack:///./src/app/shared/services/personaltrainer.service.ts","webpack:///./src/app/shared/services/product.service.ts","webpack:///./src/app/shared/services/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { LocalStoreService } from \"./local-store.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HealthQuestionsService {\n  readonly apiURL = \"http://45.118.132.77/api\";\n  // readonly apiURL = \"http://localhost/efc/api\";\n\n  constructor(private http: HttpClient, private store: LocalStoreService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: \"Bearer \" + this.store.getItem(\"access_token\")\n    })\n  };\n\n  getQuestions() {\n    return this.http.get(this.apiURL + \"/health_questions\", this.httpOptions);\n  }\n\n  createQuestion(data) {\n    return this.http.post(\n      this.apiURL + \"/health_questions\",\n      data,\n      this.httpOptions\n    );\n  }\n\n  deleteQuestion(id) {\n    return this.http.delete(\n      this.apiURL + \"/health_questions/\" + id,\n      this.httpOptions\n    );\n  }\n\n  showQuestion(id) {\n    return this.http.get(\n      this.apiURL + \"/health_questions/\" + id,\n      this.httpOptions\n    );\n  }\n\n  updateQuestion(id, data) {\n    return this.http.put(\n      this.apiURL + \"/health_questions/\" + id,\n      data,\n      this.httpOptions\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { LocalStoreService } from \"./local-store.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MemberTypeService {\n  readonly apiURL = \"http://45.118.132.77/api\";\n  // readonly apiURL = \"http://localhost/efc/api\";\n\n  constructor(private http: HttpClient, private store: LocalStoreService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: \"Bearer \" + this.store.getItem(\"access_token\")\n    })\n  };\n\n  getMemberTypes() {\n    return this.http.get(this.apiURL + \"/member_types\", this.httpOptions);\n  }\n\n  createMemberType(data) {\n    return this.http.post(\n      this.apiURL + \"/member_types\",\n      data,\n      this.httpOptions\n    );\n  }\n\n  deleteMemberType(id) {\n    return this.http.delete(\n      this.apiURL + \"/member_types/\" + id,\n      this.httpOptions\n    );\n  }\n\n  showMemberType(id) {\n    return this.http.get(this.apiURL + \"/member_types/\" + id, this.httpOptions);\n  }\n\n  updateMemberType(id, data) {\n    return this.http.put(\n      this.apiURL + \"/member_types/\" + id,\n      data,\n      this.httpOptions\n    );\n  }\n\n  memberTypePt() {\n    return this.http.get(this.apiURL + \"/member_type_pt\", this.httpOptions);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { LocalStoreService } from \"./local-store.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PersonaltrainerService {\n  readonly apiURL = \"http://45.118.132.77/api\";\n  // readonly apiURL = \"http://localhost/efc/api\";\n\n  constructor(private http: HttpClient, private store: LocalStoreService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: \"Bearer \" + this.store.getItem(\"access_token\")\n    })\n  };\n\n  getPersonalTrainers() {\n    return this.http.get(this.apiURL + \"/personaltrainers\", this.httpOptions);\n  }\n\n  createPersonalTrainer(data) {\n    return this.http.post(\n      this.apiURL + \"/personaltrainers\",\n      data,\n      this.httpOptions\n    );\n  }\n\n  deletePersonalTrainer(id) {\n    return this.http.delete(\n      this.apiURL + \"/personaltrainers/\" + id,\n      this.httpOptions\n    );\n  }\n\n  showPersonalTrainer(id) {\n    return this.http.get(\n      this.apiURL + \"/personaltrainers/\" + id,\n      this.httpOptions\n    );\n  }\n\n  updatePersonalTrainer(id, data) {\n    return this.http.put(\n      this.apiURL + \"/personaltrainers/\" + id,\n      data,\n      this.httpOptions\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getProducts() {\n    return this.http.get('api/products');\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { LocalStoreService } from \"./local-store.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n  readonly apiURL = \"http://45.118.132.77/api\";\n  // readonly apiURL = \"http://localhost/efc/api\";\n\n  constructor(private http: HttpClient, private store: LocalStoreService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: \"Bearer \" + this.store.getItem(\"access_token\")\n    })\n  };\n\n  showUser(id) {\n    return this.http.get(this.apiURL + \"/users/\" + id, this.httpOptions);\n  }\n\n  getUsers() {\n    return this.http.get(this.apiURL + \"/users\", this.httpOptions);\n  }\n\n  getSingleUser() {\n    return this.http.get(this.apiURL + \"/get_user\", this.httpOptions);\n  }\n\n  userCheckPassword( id, data ) {\n    return this.http.post(this.apiURL + \"/check_password/\"+id, data, this.httpOptions);\n  }\n\n  updateUser(id, data) {\n    return this.http.put(this.apiURL + \"/users/\" + id, data, this.httpOptions);\n  }\n\n  createUser(data) {\n    return this.http.post(this.apiURL + \"/users\", data, this.httpOptions);\n  }\n\n  deleteUser(id) {\n    return this.http.delete(this.apiURL + \"/users/\" + id, this.httpOptions);\n  }\n}\n"],"sourceRoot":""}