export = tabulator;
declare class tabulator {
  constructor(element: any, options: any);
  options: any;
  columnManager: any;
  rowManager: any;
  footerManager: any;
  browser: any;
  browserSlow: any;
  modules: any;
  addColumn(definition: any, before: any, field: any): void;
  addData(data: any, pos: any, index: any): any;
  addFilter(field: any, type: any, value: any): void;
  addRow(data: any, pos: any, index: any): any;
  bindModules(): void;
  clearData(): void;
  clearFilter(all: any): void;
  clearHeaderFilter(): void;
  clearSort(): void;
  copyToClipboard(selector: any, selectorParams: any, formatter: any, formatterParams: any): void;
  deleteColumn(field: any): any;
  deleteRow(index: any): any;
  deselectRow(rows: any): void;
  destroy(): void;
  download(type: any, filename: any, options: any): void;
  downloadToTab(type: any, filename: any, options: any): void;
  extendModule(name: any, property: any, values: any): void;
  getAjaxUrl(): any;
  getCalcResults(): any;
  getColumn(field: any): any;
  getColumnDefinitions(): any;
  getColumnLayout(): any;
  getColumns(structured: any): any;
  getData(active: any): any;
  getDataCount(active: any): any;
  getFilters(all: any): any;
  getGroupedData(): any;
  getGroups(values: any): any;
  getHeaderFilters(): any;
  getHistoryRedoSize(): any;
  getHistoryUndoSize(): any;
  getHtml(active: any): any;
  getLang(locale: any): any;
  getLocale(): any;
  getPage(): any;
  getPageMax(): any;
  getPageSize(): any;
  getRow(index: any): any;
  getRowFromPosition(position: any, active: any): any;
  getRowPosition(index: any, active: any): any;
  getRows(active: any): any;
  getSelectedData(): any;
  getSelectedRows(): any;
  getSorters(): any;
  hideColumn(field: any): any;
  initializeElement(element: any): any;
  initializeOptions(options: any): void;
  modExists(plugin: any, required: any): any;
  moveRow(from: any, to: any, after: any): void;
  navigateDown(): any;
  navigateLeft(): any;
  navigateNext(): any;
  navigatePrev(): any;
  navigateRight(): any;
  navigateUp(): any;
  nextPage(): any;
  previousPage(): any;
  redo(): any;
  redraw(force: any): void;
  registerModule(name: any, module: any): void;
  removeFilter(field: any, type: any, value: any): void;
  replaceData(data: any, params: any, config: any): any;
  scrollToColumn(field: any, position: any, ifVisible: any): any;
  scrollToRow(index: any, position: any, ifVisible: any): any;
  searchData(field: any, type: any, value: any): any;
  searchRows(field: any, type: any, value: any): any;
  selectRow(rows: any): void;
  setColumnLayout(layout: any): any;
  setColumns(definition: any): void;
  setData(data: any, params: any, config: any): any;
  setDataFromLocalFile(extensions: any): any;
  setFilter(field: any, type: any, value: any): void;
  setGroupBy(groups: any): any;
  setGroupHeader(values: any): any;
  setGroupStartOpen(values: any): any;
  setHeaderFilterFocus(field: any): any;
  setHeaderFilterValue(field: any, value: any): any;
  setHeight(height: any): void;
  setLocale(locale: any): void;
  setMaxPage(max: any): any;
  setPage(page: any): any;
  setPageSize(size: any): any;
  setPageToRow(row: any): any;
  setSort(sortList: any, dir: any): void;
  showColumn(field: any): any;
  tableComms(table: any, module: any, action: any, data: any): void;
  toggleColumn(field: any): any;
  toggleSelectRow(row: any): void;
  undo(): any;
  updateData(data: any): any;
  updateOrAddData(data: any): any;
  updateOrAddRow(index: any, data: any): any;
  updateRow(index: any, data: any): any;
}
